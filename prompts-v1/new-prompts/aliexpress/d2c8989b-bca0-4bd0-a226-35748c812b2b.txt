
        You are a web performance expert. 
        Based on the following Lighthouse audit issues: 
       
        __________________
        "
            1. Does not use HTTPS: All sites should be protected with HTTPS, even ones that don't handle sensitive data. This includes avoiding [mixed content](https://developers.google.com/web/fundamentals/security/prevent-mixed-content/what-is-mixed-content), where some resources are loaded over HTTP despite the initial request being served over HTTPS. HTTPS prevents intruders from tampering with or passively listening in on the communications between your app and your users, and is a prerequisite for HTTP/2 and many new web platform APIs. [Learn more about HTTPS](https://developer.chrome.com/docs/lighthouse/pwa/is-on-https/).
 

            
            2. First Contentful Paint: First Contentful Paint marks the time at which the first text or image is painted. [Learn more about the First Contentful Paint metric](https://developer.chrome.com/docs/lighthouse/performance/first-contentful-paint/).
 

            
            3. Largest Contentful Paint: Largest Contentful Paint marks the time at which the largest text or image is painted. [Learn more about the Largest Contentful Paint metric](https://developer.chrome.com/docs/lighthouse/performance/lighthouse-largest-contentful-paint/)
 

            
            4. Speed Index: Speed Index shows how quickly the contents of a page are visibly populated. [Learn more about the Speed Index metric](https://developer.chrome.com/docs/lighthouse/performance/speed-index/).
 

            
            5. Total Blocking Time: Sum of all time periods between FCP and Time to Interactive, when task length exceeded 50ms, expressed in milliseconds. [Learn more about the Total Blocking Time metric](https://developer.chrome.com/docs/lighthouse/performance/lighthouse-total-blocking-time/).
 

            
            6. Max Potential First Input Delay: The maximum potential First Input Delay that your users could experience is the duration of the longest task. [Learn more about the Maximum Potential First Input Delay metric](https://developer.chrome.com/docs/lighthouse/performance/lighthouse-max-potential-fid/).
 

            
            7. Cumulative Layout Shift: Cumulative Layout Shift measures the movement of visible elements within the viewport. [Learn more about the Cumulative Layout Shift metric](https://web.dev/articles/cls).
 

            
            8. Browser errors were logged to the console: Errors logged to the console indicate unresolved problems. They can come from network request failures and other browser concerns. [Learn more about this errors in console diagnostic audit](https://developer.chrome.com/docs/lighthouse/best-practices/errors-in-console/)
 

            
            9. Time to Interactive: Time to Interactive is the amount of time it takes for the page to become fully interactive. [Learn more about the Time to Interactive metric](https://developer.chrome.com/docs/lighthouse/performance/interactive/).
 

            
            10. Serves images with low resolution: Image natural dimensions should be proportional to the display size and the pixel ratio to maximize image clarity. [Learn how to provide responsive images](https://web.dev/articles/serve-responsive-images).
 

            
            11. Uses deprecated APIs: Deprecated APIs will eventually be removed from the browser. [Learn more about deprecated APIs](https://developer.chrome.com/docs/lighthouse/best-practices/deprecations/).
 

            
            12. Uses third-party cookies: Support for third-party cookies will be removed in a future version of Chrome. [Learn more about phasing out third-party cookies](https://developer.chrome.com/en/docs/privacy-sandbox/third-party-cookie-phase-out/).
 

            
            13. Minimize main-thread work: Consider reducing the time spent parsing, compiling and executing JS. You may find delivering smaller JS payloads helps with this. [Learn how to minimize main-thread work](https://developer.chrome.com/docs/lighthouse/performance/mainthread-work-breakdown/)
 

            
            14. Reduce JavaScript execution time: Consider reducing the time spent parsing, compiling, and executing JS. You may find delivering smaller JS payloads helps with this. [Learn how to reduce Javascript execution time](https://developer.chrome.com/docs/lighthouse/performance/bootup-time/).
 

            
            15. Reduce the impact of third-party code: Third-party code can significantly impact load performance. Limit the number of redundant third-party providers and try to load third-party code after your page has primarily finished loading. [Learn how to minimize third-party impact](https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/loading-third-party-javascript/).
 

            
            16. Largest Contentful Paint element: This is the largest contentful element painted within the viewport. [Learn more about the Largest Contentful Paint element](https://developer.chrome.com/docs/lighthouse/performance/lighthouse-largest-contentful-paint/)
 

            
            17. Avoid large layout shifts: These are the largest layout shifts observed on the page. Each table item represents a single layout shift, and shows the element that shifted the most. Below each item are possible root causes that led to the layout shift. Some of these layout shifts may not be included in the CLS metric value due to [windowing](https://web.dev/articles/cls#what_is_cls). [Learn how to improve CLS](https://web.dev/articles/optimize-cls)
 

            
            18. Image elements do not have explicit `width` and `height`: Set an explicit width and height on image elements to reduce layout shifts and improve CLS. [Learn how to set image dimensions](https://web.dev/articles/optimize-cls#images_without_dimensions)
 

            
            19. `[aria-hidden="true"]` elements contain focusable descendents: Focusable descendents within an `[aria-hidden="true"]` element prevent those interactive elements from being available to users of assistive technologies like screen readers. [Learn how `aria-hidden` affects focusable elements](https://dequeuniversity.com/rules/axe/4.9/aria-hidden-focus).
 

            
            20. Background and foreground colors do not have a sufficient contrast ratio.: Low-contrast text is difficult or impossible for many users to read. [Learn how to provide sufficient color contrast](https://dequeuniversity.com/rules/axe/4.9/color-contrast).
 

            
            21. `<html>` element does not have a valid value for its `[lang]` attribute.: Specifying a valid [BCP 47 language](https://www.w3.org/International/questions/qa-choosing-language-tags#question) helps screen readers announce text properly. [Learn how to use the `lang` attribute](https://dequeuniversity.com/rules/axe/4.9/html-lang-valid).
 

            
            22. Image elements do not have `[alt]` attributes: Informative elements should aim for short, descriptive alternate text. Decorative elements can be ignored with an empty alt attribute. [Learn more about the `alt` attribute](https://dequeuniversity.com/rules/axe/4.9/image-alt).
 

            
            23. Input buttons do not have discernible text.: Adding discernable and accessible text to input buttons may help screen reader users understand the purpose of the input button. [Learn more about input buttons](https://dequeuniversity.com/rules/axe/4.9/input-button-name).
 

            
            24. Links do not have a discernible name: Link text (and alternate text for images, when used as links) that is discernible, unique, and focusable improves the navigation experience for screen reader users. [Learn how to make links accessible](https://dequeuniversity.com/rules/axe/4.9/link-name).
 

            
            25. Serve static assets with an efficient cache policy: A long cache lifetime can speed up repeat visits to your page. [Learn more about efficient cache policies](https://developer.chrome.com/docs/lighthouse/performance/uses-long-cache-ttl/).
 

            
            26. Avoid enormous network payloads: Large network payloads cost users real money and are highly correlated with long load times. [Learn how to reduce payload sizes](https://developer.chrome.com/docs/lighthouse/performance/total-byte-weight/).
 

            
            27. Defer offscreen images: Consider lazy-loading offscreen and hidden images after all critical resources have finished loading to lower time to interactive. [Learn how to defer offscreen images](https://developer.chrome.com/docs/lighthouse/performance/offscreen-images/).
 

            
            28. Reduce unused CSS: Reduce unused rules from stylesheets and defer CSS not used for above-the-fold content to decrease bytes consumed by network activity. [Learn how to reduce unused CSS](https://developer.chrome.com/docs/lighthouse/performance/unused-css-rules/).
 

            
            29. Reduce unused JavaScript: Reduce unused JavaScript and defer loading scripts until they are required to decrease bytes consumed by network activity. [Learn how to reduce unused JavaScript](https://developer.chrome.com/docs/lighthouse/performance/unused-javascript/).
 

            
            30. Enable text compression: Text-based resources should be served with compression (gzip, deflate or brotli) to minimize total network bytes. [Learn more about text compression](https://developer.chrome.com/docs/lighthouse/performance/uses-text-compression/).
 

            
            31. Properly size images: Serve images that are appropriately-sized to save cellular data and improve load time. [Learn how to size images](https://developer.chrome.com/docs/lighthouse/performance/uses-responsive-images/).
 

            
            32. Avoid serving legacy JavaScript to modern browsers: Polyfills and transforms enable legacy browsers to use new JavaScript features. However, many aren't necessary for modern browsers. For your bundled JavaScript, adopt a modern script deployment strategy using module/nomodule feature detection to reduce the amount of code shipped to modern browsers, while retaining support for legacy browsers. [Learn how to use modern JavaScript](https://web.dev/articles/publish-modern-javascript)
 

            
            33. Avoid an excessive DOM size: A large DOM will increase memory usage, cause longer [style calculations](https://developers.google.com/web/fundamentals/performance/rendering/reduce-the-scope-and-complexity-of-style-calculations), and produce costly [layout reflows](https://developers.google.com/speed/articles/reflow). [Learn how to avoid an excessive DOM size](https://developer.chrome.com/docs/lighthouse/performance/dom-size/).
 

            
            34. Issues were logged in the `Issues` panel in Chrome Devtools: Issues logged to the `Issues` panel in Chrome Devtools indicate unresolved problems. They can come from network request failures, insufficient security controls, and other browser concerns. Open up the Issues panel in Chrome DevTools for more details on each issue.
 

            
            35. Avoid `document.write()`: For users on slow connections, external scripts dynamically injected via `document.write()` can delay page load by tens of seconds. [Learn how to avoid document.write()](https://developer.chrome.com/docs/lighthouse/best-practices/no-document-write/).
 

            
            36. Use HTTP/2: HTTP/2 offers many benefits over HTTP/1.1, including binary headers and multiplexing. [Learn more about HTTP/2](https://developer.chrome.com/docs/lighthouse/best-practices/uses-http2/).
 

            
            37. Links do not have descriptive text: Descriptive link text helps search engines understand your content. [Learn how to make links more accessible](https://developer.chrome.com/docs/lighthouse/seo/link-text/).
 

            
            38. Links are not crawlable: Search engines may use `href` attributes on links to crawl websites. Ensure that the `href` attribute of anchor elements links to an appropriate destination, so more pages of the site can be discovered. [Learn how to make links crawlable](https://support.google.com/webmasters/answer/9112205)
 

            
            39. Document doesn't have a valid `hreflang`: hreflang links tell search engines what version of a page they should list in search results for a given language or region. [Learn more about `hreflang`](https://developer.chrome.com/docs/lighthouse/seo/hreflang/).
 

            "
        __________________

        Due to the huge token size of HTML files, 
        You are given the HTML in chunks. 
        Please modify this HTML code chunk to resolve the performance issues given above.:

        1. Return the modified HTML code alone, making only necessary changes for performance optimization.
        2. If no optimizations are possible, return the original code.
        3. If any optimizations are made, return `<!-- Optimized by LLM -->` at the beginning point of only the changed portion
           and `<!-- End of Optimization -->` at the end of the changed portion.
        4. If the change is within a `<style>` tag, replace the HTML comment with a CSS comment.
        5. Because the code is split into chunks, there might be some unclosed or cut elements, do not worry about that.
        6. Do not change any styles or functionalities of the code.
        7. Consider that a chunk might be a part of a larger element, so the code might not be complete.
        8. Consider that HTML as a whole is from production and might be minified, uglified or compressed.

        The original HTML code is as follows:

        ```html
        
<script>
      (window.BOOMR_mq = window.BOOMR_mq || []).push([
        "addVar",
        {
          "rua.upush": "false",
          "rua.cpush": "false",
          "rua.upre": "false",
          "rua.cpre": "false",
          "rua.uprl": "false",
          "rua.cprl": "false",
          "rua.cprf": "false",
          "rua.trans": "",
          "rua.cook": "false",
          "rua.ims": "false",
          "rua.ufprl": "false",
          "rua.cfprl": "false",
          "rua.isuxp": "false",
          "rua.texp": "norulematch",
        },
      ]);
    </script>
<script>
      !(function (a) {
        var e = "https://s.go-mpulse.net/boomerang/",
          t = "addEventListener";
        if ("False" == "True")
          (a.BOOMR_config = a.BOOMR_config || {}),
            (a.BOOMR_config.PageParams = a.BOOMR_config.PageParams || {}),
            (a.BOOMR_config.PageParams.pci = !0),
            (e = "https://s2.go-mpulse.net/boomerang/");
        if (
          ((window.BOOMR_API_key = "QNAFN-M5G8E-MTGE9-MRVZ4-ECB7Z"),
          (function () {
            function n(e) {
              a.BOOMR_onload = (e && e.timeStamp) || new Date().getTime();
            }
            if (!a.BOOMR || (!a.BOOMR.version && !a.BOOMR.snippetExecuted)) {
              (a.BOOMR = a.BOOMR || {}), (a.BOOMR.snippetExecuted = !0);
              var i,
                _,
                o,
                r = document.createElement("iframe");
              if (a[t]) a[t]("load", n, !1);
              else if (a.attachEvent) a.attachEvent("onload", n);
              (r.src = "javascript:void(0)"),
                (r.title = ""),
                (r.role = "presentation"),
                ((r.frameElement || r).style.cssText =
                  "width:0;height:0;border:0;display:none;"),
                (o = document.getElementsByTagName("script")[0]),
                o.parentNode.insertBefore(r, o);
              try {
                _ = r.contentWindow.document;
              } catch (O) {
                (i = document.domain),
                  (r.src =
                    "javascript:var d=document.open();d.domain='" +
                    i +
                    "';void(0);"),
                  (_ = r.contentWindow.document);
              }
              (_.open()._l = function () {
                var a = this.createElement("script");
                if (i) this.domain = i;
                (a.id = "boomr-if-as"),
                  (a.src = e + "QNAFN-M5G8E-MTGE9-MRVZ4-ECB7Z"),
                  (BOOMR_lstart = new Date().getTime()),
                  this.body.appendChild(a);
              }),
                _.write("<bo" + 'dy onload="document._l();">'),
                _.close();
            }
          })(),
          "".length > 0)
        )
          if (
            a &&
            "performance" in a &&
            a.performance &&
            "function" == typeof a.performance.setResourceTimingBufferSize
          )
            a.performance.setResourceTimingBufferSize();
        !(function () {
          if (
            ((BOOMR = a.BOOMR || {}),
            (BOOMR.plugins = BOOMR.plugins || {}),
            !BOOMR.plugins.AK)
          ) {
            var e = "" == "true" ? 1 : 0,
              t = "",
              n = "qtg6kwyxhk3rczv2kw4q-f-3725fcad0-clientnsv4-s.akamaihd.net",
              i = "false" == "true" ? 2 : 1,
              _ = {
                "ak.v": "37",
                "ak.cp": "383714",
                "ak.ai": parseInt("604588", 10),
                "ak.ol": "0",
                "ak.cr": 37,
                "ak.ipv": 4,
                "ak.proto": "http/1.1",
                "ak.rid": "51ad533b",
                "ak.r": 45836,
                "ak.a2": e,
                "ak.m": "x",
                "ak.n": "essl",
                "ak.bpcip": "132.205.229.0",
                "ak.cport": 52164,
                "ak.gh": "23.58.127.143",
                "ak.quicv": "",
                "ak.tlsv": "tls1.3",
                "ak.0rtt": "",
                "ak.csrc": "-",
                "ak.acc": "reno",
                "ak.t": "1723487673",
                "ak.ak":
                  "hOBiQwZUYzCg5VSAfCLimQ==uWHLUKyzmIfBPBF5GPyg2e+M74MIU0Wa+8w15uz6UoxioQkPCWb9wGAcN9t3pKb53wTZjLRZUc3+kTynQX/Z9CqruBr0PK5QsROtYJRUwy1bN65PYFsoavOCickxuZ2g4zdAdWCZ85G5Qfd1kxz3J+jjD7W4zi1cBzO3ym9aB817CaclNL0WSEyB+frOoeNldB0c7eG6X2Gd3qcToPZPycdoVmJhg2oEyldZDuFUJZnRYsyKWYy1G4QJ75c6umY5/SlfnKDJlUoY4w/GXlXF/FhzdnVKqMSy/hTyD2LzWv9isuOY76S6zd3n8VmzQamfrqDvZ0ao+I4IEYVZ3yfRnarftVZwmZkzUN1S10NjuqzcxpmvFPXueZzgxpNusGOWSAWnEprXua3UW5FHlsbBa9Qa7CWPm21KbS4pX/73ipE=",
                "ak.pv": "178",
                "ak.dpoabenc": "",
                "ak.tf": i,
              };
            if ("" !== t) _["ak.ruds"] = t;
            var o = {
              i: !1,
              av: function (e) {
                var t = "http.initiator";
                if (e && (!e[t] || "spa_hard" === e[t]))
                  (_["ak.feo"] = void 0 !== a.aFeoApplied ? 1 : 0),
                    BOOMR.addVar(_);
              },
              rv: function () {
                var a = [
                  "ak.bpcip",
                  "ak.cport",
                  "ak.cr",
                  "ak.csrc",
                  "ak.gh",
                  "ak.ipv",
                  "ak.m",
                  "ak.n",
                  "ak.ol",
                  "ak.proto",
                  "ak.quicv",
                  "ak.tlsv",
                  "ak.0rtt",
                  "ak.r",
                  "ak.acc",
                  "ak.t",
                  "ak.tf",
                ];
                BOOMR.removeVar(a);
              },
            };
            BOOMR.plugins.AK = {
              akVars: _,
              akDNSPreFetchDomain: n,
              init: function () {
                if (!o.i) {
                  var a = BOOMR.subscribe;
                  a("before_beacon", o.av, null, null),
                    a("onbeacon", o.rv, null, null),
                    (o.i = !0);
                }
                return this;
              },
              is_complete: function () {
                return !0;
              },
            };
          }
        })();
      })(window);
    </script>

        ```

        